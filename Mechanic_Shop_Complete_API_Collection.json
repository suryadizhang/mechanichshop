{
	"info": {
		"_postman_id": "mechanic-shop-api-complete",
		"name": "Mechanic Shop API - Complete Testing Suite",
		"description": "Comprehensive testing collection for Mechanic Shop API with all CRUD operations, relationships, and error scenarios",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01 - Customers",
			"item": [
				{
					"name": "Create Customer #1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Jane Doe\",\n    \"email\": \"jane.doe@email.com\",\n    \"phone\": \"555-0123\",\n    \"address\": \"123 Main St, City, State\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/customers/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								""
							]
						},
						"description": "Create first customer for testing"
					}
				},
				{
					"name": "Create Customer #2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bob Smith\",\n    \"email\": \"bob.smith@email.com\",\n    \"phone\": \"555-0456\",\n    \"address\": \"456 Oak Ave, City, State\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/customers/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								""
							]
						},
						"description": "Create second customer for testing"
					}
				},
				{
					"name": "Get All Customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/customers/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								""
							]
						},
						"description": "Retrieve all customers"
					}
				},
				{
					"name": "Get Customer by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/customers/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								"1"
							]
						},
						"description": "Get specific customer by ID"
					}
				},
				{
					"name": "Update Customer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Jane Doe Updated\",\n    \"phone\": \"555-9999\",\n    \"address\": \"789 New Address St\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/customers/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								"1"
							]
						},
						"description": "Update customer information"
					}
				},
				{
					"name": "Delete Customer",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/customers/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								"2"
							]
						},
						"description": "Delete customer (test last to avoid breaking relationships)"
					}
				}
			],
			"description": "All customer CRUD operations"
		},
		{
			"name": "02 - Mechanics",
			"item": [
				{
					"name": "Create Mechanic #1 (Engine Specialist)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Smith\",\n    \"email\": \"john@mechanicshop.com\",\n    \"phone\": \"555-1001\",\n    \"specialty\": \"Engine Repair\",\n    \"hourly_rate\": 75.0,\n    \"years_experience\": 8,\n    \"is_available\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/mechanics/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"mechanics",
								""
							]
						},
						"description": "Create engine repair specialist"
					}
				},
				{
					"name": "Create Mechanic #2 (Transmission Specialist)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Sarah Johnson\",\n    \"email\": \"sarah@mechanicshop.com\",\n    \"phone\": \"555-1002\",\n    \"specialty\": \"Transmission\",\n    \"hourly_rate\": 80.0,\n    \"years_experience\": 12,\n    \"is_available\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/mechanics/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"mechanics",
								""
							]
						},
						"description": "Create transmission specialist"
					}
				},
				{
					"name": "Create Mechanic #3 (Electrical Specialist)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Mike Davis\",\n    \"email\": \"mike@mechanicshop.com\",\n    \"phone\": \"555-1003\",\n    \"specialty\": \"Electrical Systems\",\n    \"hourly_rate\": 85.0,\n    \"years_experience\": 15,\n    \"is_available\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/mechanics/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"mechanics",
								""
							]
						},
						"description": "Create electrical systems specialist"
					}
				},
				{
					"name": "Get All Mechanics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/mechanics/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"mechanics",
								""
							]
						},
						"description": "Retrieve all mechanics"
					}
				},
				{
					"name": "Update Mechanic",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"specialty\": \"Advanced Engine Diagnostics\",\n    \"hourly_rate\": 90.0,\n    \"years_experience\": 10\n}"
						},
						"url": {
							"raw": "{{base_url}}/mechanics/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"mechanics",
								"1"
							]
						},
						"description": "Update mechanic information"
					}
				},
				{
					"name": "Delete Mechanic",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/mechanics/3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"mechanics",
								"3"
							]
						},
						"description": "Delete mechanic (test after relationship tests)"
					}
				}
			],
			"description": "All mechanic CRUD operations"
		},
		{
			"name": "03 - Service Tickets",
			"item": [
				{
					"name": "Create Service Ticket #1 (Engine Issue)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": 1,\n    \"vehicle_info\": \"2020 Honda Civic - License: ABC123\",\n    \"description\": \"Engine making strange noise, possible timing belt issue\",\n    \"status\": \"Open\",\n    \"priority\": \"High\",\n    \"estimated_hours\": 4.0,\n    \"parts_cost\": 200.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/service-tickets/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								""
							]
						},
						"description": "Create service ticket for engine repair"
					}
				},
				{
					"name": "Create Service Ticket #2 (Transmission Issue)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": 1,\n    \"vehicle_info\": \"2018 Toyota Camry - License: XYZ789\",\n    \"description\": \"Transmission slipping, needs inspection\",\n    \"status\": \"Open\",\n    \"priority\": \"Medium\",\n    \"estimated_hours\": 2.5,\n    \"parts_cost\": 150.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/service-tickets/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								""
							]
						},
						"description": "Create service ticket for transmission repair"
					}
				},
				{
					"name": "Create Service Ticket #3 (Electrical Issue)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": 2,\n    \"vehicle_info\": \"2019 Ford F-150 - License: DEF456\",\n    \"description\": \"Electrical issues, dashboard lights not working\",\n    \"status\": \"Open\",\n    \"priority\": \"Low\",\n    \"estimated_hours\": 3.0,\n    \"parts_cost\": 100.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/service-tickets/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								""
							]
						},
						"description": "Create service ticket for electrical repair"
					}
				},
				{
					"name": "Get All Service Tickets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								""
							]
						},
						"description": "Retrieve all service tickets"
					}
				}
			],
			"description": "All service ticket operations"
		},
		{
			"name": "04 - Relationships (Many-to-Many)",
			"item": [
				{
					"name": "Assign Mechanic #1 to Ticket #1",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/1/assign-mechanic/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								"1",
								"assign-mechanic",
								"1"
							]
						},
						"description": "Assign engine specialist to engine repair ticket"
					}
				},
				{
					"name": "Assign Mechanic #2 to Ticket #1 (Multiple Mechanics)",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/1/assign-mechanic/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								"1",
								"assign-mechanic",
								"2"
							]
						},
						"description": "Assign second mechanic to same ticket (demonstrates many-to-many)"
					}
				},
				{
					"name": "Assign Mechanic #2 to Ticket #2",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/2/assign-mechanic/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								"2",
								"assign-mechanic",
								"2"
							]
						},
						"description": "Assign transmission specialist to transmission ticket"
					}
				},
				{
					"name": "Assign Mechanic #3 to Ticket #3",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/3/assign-mechanic/3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								"3",
								"assign-mechanic",
								"3"
							]
						},
						"description": "Assign electrical specialist to electrical ticket"
					}
				},
				{
					"name": "Verify All Assignments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								""
							]
						},
						"description": "Get all tickets to verify mechanic assignments"
					}
				},
				{
					"name": "Remove Mechanic #1 from Ticket #1",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/1/remove-mechanic/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								"1",
								"remove-mechanic",
								"1"
							]
						},
						"description": "Remove mechanic from ticket (should leave mechanic #2 still assigned)"
					}
				},
				{
					"name": "Try to Remove Non-Assigned Mechanic (Should Fail)",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/2/remove-mechanic/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								"2",
								"remove-mechanic",
								"1"
							]
						},
						"description": "Attempt to remove mechanic that's not assigned (should return error)"
					}
				},
				{
					"name": "Try to Assign Same Mechanic Twice (Should Fail)",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/2/assign-mechanic/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								"2",
								"assign-mechanic",
								"2"
							]
						},
						"description": "Try to assign mechanic that's already assigned (should return message)"
					}
				}
			],
			"description": "Test many-to-many relationships between mechanics and service tickets"
		},
		{
			"name": "05 - Error Testing",
			"item": [
				{
					"name": "Create Customer - Invalid Email (400 Error)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Invalid User\",\n    \"email\": \"invalid-email\",\n    \"phone\": \"555-0000\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/customers/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								""
							]
						},
						"description": "Test validation error for invalid email format"
					}
				},
				{
					"name": "Create Customer - Duplicate Email (400 Error)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Duplicate User\",\n    \"email\": \"jane.doe@email.com\",\n    \"phone\": \"555-0000\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/customers/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								""
							]
						},
						"description": "Test validation error for duplicate email"
					}
				},
				{
					"name": "Get Non-Existent Customer (404 Error)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/customers/999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								"999"
							]
						},
						"description": "Test 404 error for non-existent customer"
					}
				},
				{
					"name": "Create Ticket - Invalid Customer (400 Error)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": 999,\n    \"vehicle_info\": \"Test Vehicle\",\n    \"description\": \"Test description\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/service-tickets/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								""
							]
						},
						"description": "Test error for invalid customer foreign key"
					}
				},
				{
					"name": "Assign Non-Existent Mechanic (404 Error)",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/1/assign-mechanic/999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								"1",
								"assign-mechanic",
								"999"
							]
						},
						"description": "Test 404 error for non-existent mechanic"
					}
				},
				{
					"name": "Assign to Non-Existent Ticket (404 Error)",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/service-tickets/999/assign-mechanic/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"service-tickets",
								"999",
								"assign-mechanic",
								"1"
							]
						},
						"description": "Test 404 error for non-existent service ticket"
					}
				},
				{
					"name": "Create Mechanic - Missing Required Field (400 Error)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Incomplete Mechanic\",\n    \"email\": \"incomplete@test.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/mechanics/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"mechanics",
								""
							]
						},
						"description": "Test validation error for missing required fields"
					}
				}
			],
			"description": "Test various error scenarios and validation"
		},
		{
			"name": "06 - API Info",
			"item": [
				{
					"name": "Get API Welcome Message",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Get API welcome message and endpoint information"
					}
				}
			],
			"description": "Basic API information endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:5000",
			"type": "string"
		}
	]
}
